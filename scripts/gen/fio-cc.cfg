[global]
# Use threads when numjobs > 0
thread=1
# Async/direct IO
ioengine=libaio
direct=1
# Keep the suspense going; do not help w/ fadvise
fadvise_hint=0
verify=0
group_reporting=1
# Predictable random numbers
#randrepeat=1
#allrandrepeat=1
# By default, time based jobs, 6 hours
#time_based=1
ramp_time=5s
runtime=5m
# A 50/50 rand read/write workload
rw=randrw
# Cockroach issues requests sized with the following distribution:
# (format: size/percentage:...)
#  bssplit=4k/8:8k/37:16k/47:32k/5:64k/1:512k/1
# The weighted average block size is 18.4 KB.  However, setting rate_iops
# (which effectively limits FIO *bandwidth*) is pretty hard when using
# variable length blocks sizes.  So, for the purpose of most of the benchmarks
# we assume 16KB block size, and, where needed set rate_ios to restrict
# FIO bandwidith.
bs=16K

# Note: --filename must be specified on command line.

[fill-disk-ignore]
# Do not report job results
# This job fills the entire disk w/ data.
rw=randwrite
bs=1M
time_based=0
iodepth=256
stonewall

[bandwidth]
# Measure read/write bandwidth: Lots of very large IOPs.
bs=1M
iodepth=${IODEPTH_BW}
numjobs=8
offset_increment=${OFFSET}
stonewall

[iops]
# Measure max IOPs: Lots of outstanding IOPs.
iodepth=${IODEPTH_IOPS}
stonewall

[latency]
# Measure latency: few IOPs at a time.
iodepth=${IODEPTH_LATENCY}
stonewall
