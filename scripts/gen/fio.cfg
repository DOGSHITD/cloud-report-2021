[global]
directory=/mnt/data1/fio
# Use threads when numjobs > 0
thread=1
# File size.  1 File created per job.
size=4G
# Keep the suspense going; do not help w/ fadvise
fadvise_hint=0
# 5 minute run, with 1 minute ramp-up.
runtime=10
#ramp_time=60s
# Runtime based, overwrites or over-reads several times the specified file
time_based
# Uncomment to drop dentry/inode caches.
# Requires sudo; which we use anyway since
# we expect fio benchmarks to run under memory constrained cgroup.
# exec_prerun=echo 3 > /proc/sys/vm/drop_caches

;
; CRDB read/write benchmarks; 4KB blocksize
;
[crdb-seq-read-4k]
; Sequential reads: Database scans
include crdb-fio.cfg
rw=read
blocksize=4k
stonewall

[crdb-seq-read-4k]
; Random reads: point lookups
include crdb-fio.cfg
rw=read
blocksize=4k
stonewall

[crdb-write-4k]
; Sequential (append only writes) used by LSM
include crdb-fio.cfg
rw=write
blocksize=4k
stonewall

;
; CRDB read/write benchmarks; 8KB blocksize
;
[crdb-seq-read-8k]
; Sequential reads: Database scans
include crdb-fio.cfg
rw=read
blocksize=8k
stonewall

[crdb-seq-read-8k]
; Random reads: point lookups
include crdb-fio.cfg
rw=read
blocksize=8k
stonewall

[crdb-write-8k]
; Sequential (append only writes) used by LSM
include crdb-fio.cfg
rw=write
blocksize=8k
stonewall

;
; CRDB read/write benchmarks; 16KB blocksize
;
[crdb-seq-read-16k]
; Sequential reads: Database scans
include crdb-fio.cfg
rw=read
blocksize=16k
stonewall

[crdb-seq-read-16k]
; Random reads: point lookups
include crdb-fio.cfg
rw=read
blocksize=16k
stonewall

[crdb-write-16k]
; Sequential (append only writes) used by LSM
include crdb-fio.cfg
rw=write
blocksize=16k
stonewall


;
; General performance benchmarks.
;

[rdwr-80.20-4k]
 ; 80% reads/20% writes
 include crdb-fio.cfg
 rw=randrw
 rwmixread=80
 blocksize=4k
 stonewall

[rdwr-50.50-4k]
 ; 50% reads/50% writes
 include crdb-fio.cfg
 rw=randrw
 rwmixread=50
 blocksize=4k
 stonewall

[rdwr-20.80-4k]
 ; 20% reads/80% writes
 include crdb-fio.cfg
 rw=randrw
 rwmixread=20
 blocksize=4k
 stonewall
